{"componentChunkName":"component---src-pages-blog-contentful-blog-post-url-tsx","path":"/blog/aws-ug-nl-5th-year/","result":{"data":{"contentfulBlogPost":{"mainText":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Yesterday evening I attended the AWS UG NL 5th year anniversary meetup in Amsterdam. The night consisted of 4 talks and some delicious pizza and beer, hosted in the same place where the first meetup was organised back \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"on November 8th, 2017: the Xebia office space\",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\". This is my overview of the night.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-1\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Scotty beam me up - Ric van Slooten\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"What needed to be done to handle beyond 1,000 bookings in less than minutes\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"A story of how their flight and rail disruption system (organising hotels, transport and food when journeys are cancelled or delayed) went from being a deployment-per-customer type architecture running VMs in idle most of the time, to utilising serverless services on AWS. They saved costs, and increased performance/scalability. They also found benefits through better insights using CloudWatch. Furthermore, they mentioned that the company downsized its engineering capability after a large portion of the migration was done.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-1\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Develop Compliant Infrastructure - Joris Conijn\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"This talk was based around \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://aws.amazon.com/about-aws/whats-new/2022/08/build-aws-config-rules-cloudformation-guard/\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"a blog post from AWS\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" about using cfn-guard syntax (Guard DSL) to author AWS Config rules. This means if you are already familiar with writing cfn-guard rules, it won’t be as difficult to set up an extra reactive measure to validate your infrastructure; as previously you would have to develop a Lambda function to create these rules.\\nAt the moment, these rules can’t be shared as though the syntax is the same, cfn-guard works on entire CloudFormation templates whereas AWS Config checks against individual changed resources; this means that not all the same properties and resources can be checked with both tools.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-1\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Four Ways to Run Kotlin on AWS Lambda - Elena van Engelen-Maslova\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"While Kotlin is most known for running on Android or interoperably with Java on the JVM, it is also able to compile to other runtimes like NodeJS or standalone with Kotlin Native. This talk walked through some of the benefits and trade-offs with using these different runtimes on Lambda. Also showing some example Lambda code and CDK setup.\\nRunning Kotlin on the JVM runtime in Lambda is relatively easy, as this runtime is officially supported in AWS. However, the cold-start times are very slow due to the overhead with starting the VM, the warm-starts are also slower than NodeJS due to this overhead.\\nCompiling Kotlin to NodeJS to then deploy to Lambda has a few more steps to get working. To use the NodeJS AWS SDK in Kotlin, you need to provide an external interface to the functions you want to use. Though, once this is set up, it can be re-used across projects. The NodeJS runtime is also officially supported, and its start times are better than the JVM runtimes, however performance may be slower if a lot of multithreading is needed.\\nTo use Kotlin Native on Lambda requires the use of a custom runtime. This can be built and provided by using open-source docker containers for the desired architecture/environment. While you can use the Java AWS SDKs, not all libraries will work with Kotlin Native out of the box. Libraries using Reflection will need metadata added to them, though there are tools to automatically generate this.\\nOn top of running Kotlin in Lambda, you can also use NodeJS compilation to write CDK constructs in Kotlin.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-1\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Network Firewall Deep-Dive - Sidney Borrego y Diaz\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"A lot of this talk went over my head, as I don’t work with VPCs and firewalls very often, and strictly-governed firewall configurations/policies don’t seem very applicable when writing serverless applications using AWS managed services. However, there were some nice examples of how one might set up Suricata rules to do some basic, and more complex, threat detection and dropping packets.\",\"marks\":[],\"data\":{}}]}]}"},"title":"AWS User Group Netherlands - 5th year anniversary meetup"}},"pageContext":{"id":"fb201011-03ff-5073-a46b-5b95db072acc","url":"aws-ug-nl-5th-year","__params":{"url":"aws-ug-nl-5th-year"}}},"staticQueryHashes":[]}